"""

Pentagonal numbers are generated by the formula, pn = n(3n -1)/2. The first ten pentagonal numbers are:

1,5,12,22,35,51,70,92,117,145,...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8 . However, their difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal D = |Pk -Pj| and is minimised; 
what is the value of D?

"""
def is_pentagonal(num):
    n = ((24 * num + 1) ** 0.5 + 1) / 6
    return n.is_integer()


def pentagonal_numbers(n):
    pent_list = []
    for x in range(1, n):
        pent = x * (3 * x - 1) // 2
        pent_list.append(pent)
    return pent_list


def small_D(pentagons):
    smallest_d = float('inf')
    for i in range(len(pentagons)):
        for j in range(i + 1, len(pentagons)):  # Start from i + 1 to avoid redundant checks
            if is_pentagonal(pentagons[i] + pentagons[j]) and is_pentagonal(abs(pentagons[i] - pentagons[j])):
                difference = abs(pentagons[j] - pentagons[i])
                if difference < smallest_d:
                    smallest_d = difference
    return smallest_d

pentagonally = pentagonal_numbers(5000)
result = small_D(pentagonally)
print(result)



